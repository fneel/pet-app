forts med bootstrap O BOOTSWATCH i app.js 


hur renderas inputvärden??




hur lägger jag in 3 tasks som default? de ska finnas tre tasks redan från början med ett default-värde i inputfältet. om admin inte ändrar inputvärdet och registrerar användaren direkt så följer uppgifterna (tasks) med och har då default-värdet 

varje task ska ha en checkbox som användaren kan klicka i/klicka ur.  i 'AdminIndUserView' ska admin kunna se för varje task om checkboxen är checked eller unchecked. 



efter att jag lägger till en task fungerar inte appen öht. klagar på "find". felet uppstår direkt när man trycker på knappen 'register' och efter det går appen inte att öppna pga error. vad händer i register?
create user ger inga problem



hur gör jag med följande kod för att skicka med uppdaterade värden av en uppgift ('task') till den specifika användaren ('user') som uppgifterna tillhör? nu laddas 

jag har två komponenter som models:

.....

// src\models\user.js

export class UserModel {
  static nextId = 1; // Startvärde för ID

  constructor(name, password) {
    this.id = UserModel.nextId++; // Tilldela ett unikt ID och öka nästa ID för nästa användare
    this.name = name;
    this.password = password;
    this.tasks = [];
  }

}

......

// src\models\tasks.js

export class Task {
    constructor(name) {
        this.name = name;
        this.users = [];
        this.isCompleted = false; // fält för checkbox status
    }
}
......

och storage för att hantera dessa:

......

src\storage\user.js

export function saveUsers(users) {
  localStorage.setItem("users", JSON.stringify(users));
}

export function loadUsers() {
  let json = localStorage.getItem("users");
  if (json === null) {
    return [];
  } else {
    // Parsa JSON och skapa användarobjekt med rätt ID
    const parsedUsers = JSON.parse(json).map((user, index) => ({
      ...user,
      id: index + 1, // Lägg till ett unikt ID baserat på positionen i listan
    }));
    return parsedUsers;
  }
}

export function login(username, password, users) {
  for (let user of users) {
    if (user.name === username && user.password === password) {
      return user;
    }
  }

  return null;
}

.....

src\storage\tasks.js

//funktion som sparar alla tasks till localStorage ("databasen")

export function saveTasks(tasks) {
    localStorage.setItem("tasks", JSON.stringify(tasks));
}


//funktion som laddar in all data från "saveTasks" -funktionen ovanför
//från början finns ingen data - därav en tom array
export function loadTasks() {
    let json = localStorage.getItem("tasks");
    if (json ===  null) {
        return [];
    } else {
        return JSON.parse(json);
    }
}

......

src\states\index.js

import { atom } from "recoil";
import { UserModel } from "../models/user";
import { Task } from "../models/tasks";


//state som minns vilket konto du loggat in på
export const userState = atom({
    key: "user-login", 
    default: null,
});

//state som minns samtliga konton. Default-konto för att kunna logga in som admin
export const usersState = atom({
    key: "users",
    default: [new UserModel("admin", "admin")],
});

//state som minns alla tasks
export const tasksState = atom({
    key: "tasks",
    default: [new Task("Promenad")],
});


// atom för att hantera isCompleted-attributet för varje task
export const taskCompletedState = atom({
  key: 'taskCompletedState',
  default: {}, // objekt för att lagra isCompleted för varje task
});

export const userTasksState = atom({
    key: 'userTasksState',
    default: {},
});




.....................

saknar den här något som gör att just tasks inte fungerar?

src\models\tasks.js

export class Task {
    constructor(name) {
        this.name = name;
        this.isCompleted = false; // fält för checkbox status
    }
}